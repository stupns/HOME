# class O: ...
# class A(O): ...
# class B(O): ...
# class C(O): ...
# class D(O): ...
# class E(O): ...
# class K1(A, B, C): ...
# class K2(B, D): ...
# class K3(C, D, E): ...
# class Z(K1, K2, K3): ...
#
# print(Z.mro())

# ERROR
class X: ...
class Y: ...
class A(X, Y): ...
class B(Y, X): ...

# class MyMRO(type):  # наследование type = это метакласс
#     def mro(cls):
#         return (cls, A, B, X, Y, object)  # явно задаем порядок!
#
# class G(A,B, metaclass=MyMRO):
#     ...
# print(G.mro())

# ERROR
# class X: ...
# class Y(X): ...
# class A(X, Y): ...